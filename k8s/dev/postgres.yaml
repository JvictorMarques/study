apiVersion: v1
kind: Secret
metadata:
  name: postgres
  namespace: dev
type: Opaque
data:
  POSTGRES_USER: cG9zdGdyZXNfdXNlcg==
  POSTGRES_DB: cG9zdGdyZXM=
  POSTGRES_PASSWORD: U2VjdXJlUGFzc3cwcmQxMjMhQA==
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: dev
spec:
  serviceName: postgres
  replicas: 3
  selector:
    matchLabels:
      db: postgres
  template:
    metadata:
      labels:
        db: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        envFrom:
        - secretRef:
            name: postgres
        ports:
        - containerPort: 5432
          name: db
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        startupProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          exec:
            command: ["pg_isready", "-U", "postgres"]
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          exec:
            command: ["pg_isready", "-U", "postgres"]
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          exec:
            command: ["pg_isready", "-U", "postgres"]
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
          subPath: pgdata
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                - key: db
                  operator: In
                  values:
                  - postgres
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOncePod"]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres
  namespace: dev
spec:
  podSelector:
    matchLabels:
      db: postgres
  policyTypes:
    - Ingress
    - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: web-api
    ports:
    - protocol: TCP
      port: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: dev
spec:
  clusterIP: None
  selector:
    db: postgres
  ports:
  - port: 5432
    targetPort: 5432
